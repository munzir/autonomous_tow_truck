<?xml version="1.0" ?>
<robot name="basic_mobile_bot" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- ****************** ROBOT CONSTANTS *******************************  -->
  <!-- Define the size of the robot's main chassis in meters -->
  <xacro:property name="base_width" value="0.78"/>
  <xacro:property name="base_length" value="1.27"/>
  <xacro:property name="base_height" value="1.90"/>
	
  <!-- Define the shape of the robot's two back wheels in meters -->
  <xacro:property name="wheel_radius" value="0.2"/>
  <xacro:property name="wheel_width" value="0.09"/>

  <!-- x-axis points forward, y-axis points to left, z-axis points upwards -->
  <!-- Define the gap between the wheel and chassis along y-axis in meters, previously 0.295 -->
  <xacro:property name="wheel_ygap" value="0.01"/>

  <!-- Position the wheels along the z-axis -->
  <xacro:property name="wheel_zoff" value="0.05"/>

  <!-- Position the wheels along the x-axis -->
  <xacro:property name="wheel_xoff" value="0.635"/>

  <!-- Position the caster wheel along the x-axis -->
  <xacro:property name="steering_wheel_xoff" value="0.55"/>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" iyy="${(2/5) * m * (r*r)}" iyz="0.0" izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- ****************** ROBOT BASE FOOTPRINT ***************************  -->
  <!-- Define the center of the main robot chassis projected on the ground -->	
  <link name="base_footprint"/>

  <!-- The base footprint of the robot is located underneath the chassis -->
  <joint name="base_joint" type="fixed">
    <parent link="base_footprint"/>
    <child link="base_link" />
    <origin xyz="0.0 0.0 ${(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

  <!-- ********************** ROBOT BASE *********************************  -->
  <link name="base_link">
  <visual>
    <origin xyz="0 0 -0.05" rpy="0 0 0"/>
    <geometry>
      <box size="${base_length} ${base_width} ${base_height}"/>
    </geometry>
    <material name="Red">
      <color rgba="1.0 0.0 0.0 1.0"/>
    </material>
  </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="360.0" w="${base_width}" d="${base_length}" h="${base_height}"/>
    
  </link>

  <gazebo reference="base_link">
    <material>Gazebo/Red</material>
  </gazebo>

  <!-- *********************** DRIVE WHEELS ******************************  -->

  <link name="rear_axle_link"/>

  <joint name="rear_axle_joint" type="fixed">
    <parent link="base_link"/>
    <child link="rear_axle_link"/>
    <origin xyz="${-wheel_xoff} 0 ${-wheel_zoff}" rpy="0 0 0"/>
  </joint>

  <xacro:macro name="wheel" params="prefix x_reflect y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="1.5707963267949 0 0"/>
        <geometry>
            <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
        <material name="White">
          <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
        </material>
      </visual>
      
      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
        </geometry>
      </collision>
      
      <xacro:cylinder_inertia m="400" r="${wheel_radius}" h="${wheel_width}"/>
      
    </link>

    <!-- Connect the wheels to the base_link at the appropriate location, and 
         define a continuous joint to allow the wheels to freely rotate about
         an axis -->
    <joint name="${prefix}_joint" type="revolute">
      <parent link="rear_axle_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="0 ${y_reflect*(base_width/2+wheel_ygap)} 0" rpy="0 0 0"/>
      <limit upper="3.1415" lower="-3.1415" effort="30" velocity="5.0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <!-- Instantiate two wheels using the macro we just made through the 
       xacro:wheel tags. We also define the parameters to have one wheel
       on both sides at the back of our robot (i.e. x_reflect=-1). -->
  <xacro:wheel prefix="drivewhl_l" x_reflect="-1" y_reflect="1" />
  <xacro:wheel prefix="drivewhl_r" x_reflect="-1" y_reflect="-1" />

  <!-- *********************** STEERING WHEEL ******************************  -->
  <link name="steering_link"/>

  <!-- Munzir- this is a fixed hook to position the steering links -->
  <!-- could have done without it, but trying to be consistent with Ailiya's SDF -->
  <joint name="steering_joint" type="fixed">
    <parent link="base_link"/>
    <child link="steering_link"/>
    <origin xyz="${steering_wheel_xoff} 0 -${wheel_zoff}" rpy="0 0 0"/>
  </joint>

  <link name="steering_wheel_link">
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
  </link>

  <joint name="steering_wheel_joint" type="revolute">
    <parent link="steering_link"/>
    <child link="steering_wheel_link"/>
    <origin xyz="0 0 0" rpy="0 ${pi/2} ${pi/2}"/>
    <limit upper="1.047" lower="-1.047" effort="10" velocity="1.0"/>
    <axis xyz="-1 0 0"/>
  </joint>

  <link name="front_steering_wheel_link">
    <visual>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
      <material name="White">
        <color rgba="${255/255} ${255/255} ${255/255} 1.0"/>
      </material>
    </visual>
    
    <collision>
      <geometry>
        <cylinder radius="${wheel_radius}" length="${wheel_width}"/>
      </geometry>
    </collision>
    <xacro:cylinder_inertia m="110.5" r="${wheel_radius}" h="${wheel_width}"/>
  </link>

  <gazebo reference="front_steering_wheel_link">
    <material>Gazebo/White</material>
  </gazebo>

  <joint name="front_steering_wheel_joint" type="revolute">
    <parent link="steering_wheel_link"/>
    <child link="front_steering_wheel_link"/>
    <origin xyz="0 0 0" rpy="0 0 0"/>
    <limit upper="3.1415" lower="-3.1415" effort="10" velocity="1.0"/>
    <axis xyz="0 0 1"/>
  </joint>

  <!-- *********************** IMU SETUP *********************************  -->
  <!-- Each sensor must be attached to a link.                              --> 
  
  <joint name="imu_joint" type="fixed">
    <parent link="base_link"/>
    <child link="imu_link"/>
    <origin xyz="-0.10 0 0.05" rpy="0 0 0"/>
  </joint>

  <link name="imu_link"/>

  <!-- *********************** GPS SETUP **********************************  -->
  <joint name="gps_joint" type="fixed">
    <parent link="base_link"/>
    <child link="gps_link"/>
    <origin xyz="0.10 0 0.05" rpy="0 0 0"/>
  </joint>

  <link name="gps_link"/>
  
  <!-- *********************** LIDAR SETUP **********************************  -->
  <joint name="lidar_joint" type="fixed">
    <parent link="base_link"/>
    <child link="lidar_link"/>
    <origin xyz="0.65 0 1.90" rpy="0 0 0"/>
  </joint>

  <link name="lidar_link">
  
    <collision>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <geometry>
      <cylinder radius="0.0508" length="0.18"/>
     </geometry>
    </collision>
    
    <visual>
     <origin xyz="0 0 0" rpy="0 0 0"/>
     <geometry>
      <cylinder radius="0.02" length="0.04"/>
     </geometry>
     <material name="Black">
          <color rgba="${0/255} ${0/255} ${0/255} 1.0"/>
     </material>
    </visual>
    
    <inertial>
      <mass value="0.35" />
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001" />
    </inertial>
  </link>

</robot>
